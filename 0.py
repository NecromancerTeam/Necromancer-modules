# Necromanser modules
# ¬© Copyright 2025
# Git Hub https://github.com/NecromancerTeam/Modules-Heroku
# N:modules https://t.me/Lptmiop
# By Lptm-iop $ Necromanser team
import random
import aiohttp
from .. import loader, utils
from hikkatl.tl.types import Message

@loader.tds
class FunModule(loader.Module):
    """üéâ FunModule ‚Äî –∑–∞–±–∞–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: 8ball, choose, fact"""

    strings = {
        "name": "FunModule",
        "answers_en": [
            "It is certain.", "Without a doubt.", "You may rely on it.",
            "Ask again later.", "Cannot predict now.", "Don't count on it.",
            "My sources say no.", "Very doubtful."
        ],
        "answers_ru": [
            "–ë–µ—Å—Å–ø–æ—Ä–Ω–æ.", "–≠—Ç–æ —Ç–æ—á–Ω–æ.", "–ú–æ–∂–µ—à—å –Ω–∞ —ç—Ç–æ –ø–æ–ª–æ–∂–∏—Ç—å—Å—è.",
            "–°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ.", "–°–µ–π—á–∞—Å –Ω–µ —è—Å–Ω–æ.", "–í—Ä—è–¥ –ª–∏.",
            "–ú–æ–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≥–æ–≤–æ—Ä—è—Ç –Ω–µ—Ç.", "–û—á–µ–Ω—å —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ."
        ],
        "no_question": "‚ùó <b>–£–∫–∞–∂–∏ –≤–æ–ø—Ä–æ—Å –¥–ª—è 8ball.</b>\n<code>.8ball –ë—É–¥–µ—Ç –ª–∏ –∑–∞–≤—Ç—Ä–∞ —Å–æ–ª–Ω—Ü–µ?</code>",
        "eightball": "<b>üé± 8ball:</b>\n<blockquote>{}</blockquote>",
        "no_options": "‚ùó <b>–£–∫–∞–∂–∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã —á–µ—Ä–µ–∑ <code>;</code>.</b>\n<code>.choose –∫–æ—Ñ–µ;—á–∞–π;–≤–æ–¥–∞</code>",
        "choose": "<b>üé≤ –Ø –≤—ã–±–∏—Ä–∞—é:</b>\n<blockquote>{}</blockquote>",
        "fact_error": "‚ö†Ô∏è <b>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–∫—Ç.</b>",
        "fact": "<b>üîé –§–∞–∫—Ç:</b>\n<blockquote>{}</blockquote>",
        "help": (
            "<b>üéâ FunModule ‚Äî –°–ø—Ä–∞–≤–∫–∞:</b>\n\n"
            "<b>üìå –ö–æ–º–∞–Ω–¥—ã:</b>\n"
            "üîπ <code>.8ball &lt;–≤–æ–ø—Ä–æ—Å&gt;</code> ‚Äî –æ—Ç–≤–µ—Ç —à–∞—Ä–∞ —Å—É–¥—å–±—ã\n"
            "üîπ <code>.choose –≤–∞—Ä–∏–∞–Ω—Ç1;–≤–∞—Ä–∏–∞–Ω—Ç2</code> ‚Äî —Å–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä\n"
            "üîπ <code>.fact</code> ‚Äî —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç –æ—Ç numbersapi.com\n"
            "üîπ <code>.funhelp</code> ‚Äî —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –º–æ–¥—É–ª—é\n\n"
            "<i>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @jdjskskskskkdkmodules</i>"
        ),
    }

    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "language", "en",
                "–Ø–∑—ã–∫ –æ—Ç–≤–µ—Ç–æ–≤ (en/ru)",
                validator=loader.validators.Choice(["en", "ru"])
            ),
            loader.ConfigValue(
                "fact_type", "trivia",
                "–¢–∏–ø —Ñ–∞–∫—Ç–∞ (trivia/math/date/year)",
                validator=loader.validators.Choice(["trivia", "math", "date", "year"])
            ),
        )

    @loader.command(
        ru_doc="–®–∞—Ä —Å—É–¥—å–±—ã. –ü—Ä–∏–º–µ—Ä: .8ball –ë—É–¥–µ—Ç –ª–∏ –¥–æ–∂–¥—å?",
        description="8ball ‚Äî –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å"
    )
    async def eightballcmd(self, message: Message):
        text = utils.get_args_raw(message)
        if not text:
            return await utils.answer(message, self.strings("no_question"))
        lang = self.config["language"]
        answers = self.strings[f"answers_{lang}"]
        answer = random.choice(answers)
        await utils.answer(message, self.strings("eightball").format(answer))

    @loader.command(
        ru_doc="–í—ã–±–æ—Ä –∏–∑ —Å–ø–∏—Å–∫–∞. –ü—Ä–∏–º–µ—Ä: .choose a;b;c",
        description="choose ‚Äî –≤—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç"
    )
    async def choosecmd(self, message: Message):
        raw = utils.get_args_raw(message)
        if ";" not in raw:
            return await utils.answer(message, self.strings("no_options"))
        opts = [o.strip() for o in raw.split(";") if o.strip()]
        if not opts:
            return await utils.answer(message, self.strings("no_options"))
        choice = random.choice(opts)
        await utils.answer(message, self.strings("choose").format(choice))

    @loader.command(
        ru_doc="–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç. –ü—Ä–∏–º–µ—Ä: .fact",
        description="fact ‚Äî –ø–æ–ª—É—á–∞–µ—Ç —Ñ–∞–∫—Ç –ø–æ Numbers API"
    )
    async def factcmd(self, message: Message):
        url = f"http://numbersapi.com/random/{self.config['fact_type']}?json"
        try:
            async with aiohttp.ClientSession() as s:
                async with s.get(url) as r:
                    data = await r.json()
            fact = data.get("text")
            await utils.answer(message, self.strings("fact").format(fact))
        except:
            await utils.answer(message, self.strings("fact_error"))

    @loader.command(
        ru_doc="–°–ø—Ä–∞–≤–∫–∞ –ø–æ FunModule",
        description=".funhelp ‚Äî —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –º–æ–¥—É–ª—é"
    )
    async def funhelpcmd(self, message: Message):
        await utils.answer(message, self.strings("help"))